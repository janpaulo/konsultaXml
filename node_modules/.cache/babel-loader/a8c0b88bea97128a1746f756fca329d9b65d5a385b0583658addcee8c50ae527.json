{"ast":null,"code":"/**\n * Converts JSON object to XML string.\n *\n *\n * Copyright(c) 2011 Etienne Lachance <et@etiennelachance.com>\n * MIT Licensed\n */\n\n/*\n * Modifications (Ivo Georgiev <ivo@linvo.org>):\n *  Escape XML entities to avoid breaking the XML if any string in the JSON contains a special char\n *  Ignore special objects - objects that inherit other objects (in practice, when working with a third-party library, most of those are circular structures)\n */\n\n/*\n*  Modifications (Alan Clarke <hi@alz.so>):\n*  added unit tests, ability to add xml node attributes, xml header option and simplified syntax\n*  removed root node, this is already covered by the module's default functionality\n*/\n\nvar util = require('util');\nvar settings = {\n  attributes_key: false,\n  header: false\n};\nmodule.exports = function xml(json, opts) {\n  'use strict';\n\n  if (opts) {\n    Object.keys(settings).forEach(function (k) {\n      if (opts[k] === undefined) {\n        opts[k] = settings[k];\n      }\n    });\n  } else {\n    opts = settings;\n  }\n  var result = opts.header ? '<?xml version=\"1.0\" encoding=\"UTF-8\"?>' : '';\n  opts.header = false;\n  if (!!json.length && typeof json !== 'string') {\n    //Array\n    json.forEach(function (node) {\n      result += xml(node, opts);\n    });\n  } else if (typeof json === 'object') {\n    Object.keys(json).forEach(function (key) {\n      if (key !== opts.attributes_key) {\n        var node = json[key],\n          attributes = '';\n        if (node === undefined || node === null) {\n          node = '';\n        }\n        if (opts.attributes_key && json[opts.attributes_key]) {\n          Object.keys(json[opts.attributes_key]).forEach(function (k) {\n            attributes += util.format(' %s=\"%s\"', k, json[opts.attributes_key][k]);\n          });\n        }\n        var inner = xml(node, opts);\n        if (inner) {\n          result += util.format(\"<%s%s>%s</%s>\", key, attributes, xml(node, opts), key);\n        } else {\n          result += util.format(\"<%s%s/>\", key, attributes);\n        }\n      }\n    });\n  } else {\n    return json.toString().replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;');\n  }\n  return result;\n};","map":{"version":3,"names":["util","require","settings","attributes_key","header","module","exports","xml","json","opts","Object","keys","forEach","k","undefined","result","length","node","key","attributes","format","inner","toString","replace"],"sources":["/workspace/konsultaXml/node_modules/json2xml/lib/json2xml.js"],"sourcesContent":["/**\n * Converts JSON object to XML string.\n *\n *\n * Copyright(c) 2011 Etienne Lachance <et@etiennelachance.com>\n * MIT Licensed\n */\n\n/*\n * Modifications (Ivo Georgiev <ivo@linvo.org>):\n *  Escape XML entities to avoid breaking the XML if any string in the JSON contains a special char\n *  Ignore special objects - objects that inherit other objects (in practice, when working with a third-party library, most of those are circular structures)\n */\n\n /*\n *  Modifications (Alan Clarke <hi@alz.so>):\n *  added unit tests, ability to add xml node attributes, xml header option and simplified syntax\n *  removed root node, this is already covered by the module's default functionality\n */\n\nvar util = require('util');\n\nvar settings = {\n    attributes_key: false,\n    header: false\n};\n\nmodule.exports = function xml(json, opts) {\n    'use strict';\n\n    if (opts) {\n        Object.keys(settings).forEach(function (k) {\n            if (opts[k] === undefined) {\n                opts[k] = settings[k];\n            }\n        });\n    } else {\n        opts = settings;\n    }\n\n    var result = opts.header ? '<?xml version=\"1.0\" encoding=\"UTF-8\"?>' : '';\n    opts.header = false;\n\n    if (!!json.length && typeof json !== 'string') { //Array\n        json.forEach(function (node) {\n            result += xml(node, opts);\n        });\n    } else if (typeof json === 'object') {\n        Object.keys(json).forEach(function (key) {\n            if (key !== opts.attributes_key) {\n                var node = json[key],\n                    attributes = '';\n\n                if (node === undefined || node === null) {\n                    node = '';\n                }\n\n                if (opts.attributes_key && json[opts.attributes_key]) {\n                    Object.keys(json[opts.attributes_key]).forEach(function (k) {\n                        attributes += util.format(' %s=\"%s\"', k, json[opts.attributes_key][k]);\n                    });\n                }\n                var inner = xml(node, opts);\n\n                if (inner) {\n                    result += util.format(\"<%s%s>%s</%s>\", key, attributes, xml(node, opts), key);\n                } else {\n                    result += util.format(\"<%s%s/>\", key, attributes);\n                }\n            }\n        });\n    } else {\n        return json.toString().replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;');\n    }\n\n    return result;\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEC;AACD;AACA;AACA;AACA;;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;AAE1B,IAAIC,QAAQ,GAAG;EACXC,cAAc,EAAE,KAAK;EACrBC,MAAM,EAAE;AACZ,CAAC;AAEDC,MAAM,CAACC,OAAO,GAAG,SAASC,GAAGA,CAACC,IAAI,EAAEC,IAAI,EAAE;EACtC,YAAY;;EAEZ,IAAIA,IAAI,EAAE;IACNC,MAAM,CAACC,IAAI,CAACT,QAAQ,CAAC,CAACU,OAAO,CAAC,UAAUC,CAAC,EAAE;MACvC,IAAIJ,IAAI,CAACI,CAAC,CAAC,KAAKC,SAAS,EAAE;QACvBL,IAAI,CAACI,CAAC,CAAC,GAAGX,QAAQ,CAACW,CAAC,CAAC;MACzB;IACJ,CAAC,CAAC;EACN,CAAC,MAAM;IACHJ,IAAI,GAAGP,QAAQ;EACnB;EAEA,IAAIa,MAAM,GAAGN,IAAI,CAACL,MAAM,GAAG,wCAAwC,GAAG,EAAE;EACxEK,IAAI,CAACL,MAAM,GAAG,KAAK;EAEnB,IAAI,CAAC,CAACI,IAAI,CAACQ,MAAM,IAAI,OAAOR,IAAI,KAAK,QAAQ,EAAE;IAAE;IAC7CA,IAAI,CAACI,OAAO,CAAC,UAAUK,IAAI,EAAE;MACzBF,MAAM,IAAIR,GAAG,CAACU,IAAI,EAAER,IAAI,CAAC;IAC7B,CAAC,CAAC;EACN,CAAC,MAAM,IAAI,OAAOD,IAAI,KAAK,QAAQ,EAAE;IACjCE,MAAM,CAACC,IAAI,CAACH,IAAI,CAAC,CAACI,OAAO,CAAC,UAAUM,GAAG,EAAE;MACrC,IAAIA,GAAG,KAAKT,IAAI,CAACN,cAAc,EAAE;QAC7B,IAAIc,IAAI,GAAGT,IAAI,CAACU,GAAG,CAAC;UAChBC,UAAU,GAAG,EAAE;QAEnB,IAAIF,IAAI,KAAKH,SAAS,IAAIG,IAAI,KAAK,IAAI,EAAE;UACrCA,IAAI,GAAG,EAAE;QACb;QAEA,IAAIR,IAAI,CAACN,cAAc,IAAIK,IAAI,CAACC,IAAI,CAACN,cAAc,CAAC,EAAE;UAClDO,MAAM,CAACC,IAAI,CAACH,IAAI,CAACC,IAAI,CAACN,cAAc,CAAC,CAAC,CAACS,OAAO,CAAC,UAAUC,CAAC,EAAE;YACxDM,UAAU,IAAInB,IAAI,CAACoB,MAAM,CAAC,UAAU,EAAEP,CAAC,EAAEL,IAAI,CAACC,IAAI,CAACN,cAAc,CAAC,CAACU,CAAC,CAAC,CAAC;UAC1E,CAAC,CAAC;QACN;QACA,IAAIQ,KAAK,GAAGd,GAAG,CAACU,IAAI,EAAER,IAAI,CAAC;QAE3B,IAAIY,KAAK,EAAE;UACPN,MAAM,IAAIf,IAAI,CAACoB,MAAM,CAAC,eAAe,EAAEF,GAAG,EAAEC,UAAU,EAAEZ,GAAG,CAACU,IAAI,EAAER,IAAI,CAAC,EAAES,GAAG,CAAC;QACjF,CAAC,MAAM;UACHH,MAAM,IAAIf,IAAI,CAACoB,MAAM,CAAC,SAAS,EAAEF,GAAG,EAAEC,UAAU,CAAC;QACrD;MACJ;IACJ,CAAC,CAAC;EACN,CAAC,MAAM;IACH,OAAOX,IAAI,CAACc,QAAQ,EAAE,CAACC,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,CAACA,OAAO,CAAC,IAAI,EAAE,MAAM,CAAC,CAACA,OAAO,CAAC,IAAI,EAAE,MAAM,CAAC,CAACA,OAAO,CAAC,IAAI,EAAE,QAAQ,CAAC;EACrH;EAEA,OAAOR,MAAM;AACjB,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}